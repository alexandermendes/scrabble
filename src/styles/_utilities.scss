$spacing-prefixes: (
  mb: margin-bottom,
  mt: margin-top,
  ml: margin-left,
  mr: margin-right,
  ma: margin,
  pb: padding-bottom,
  pt: padding-top,
  pl: padding-left,
  pr: padding-right,
  pa: padding
) !default;

// Spacing helpers
@each $key, $property in $spacing-prefixes {
  @for $i from 1 through 10 {
    .#{$key}-#{$i} {
      #{$property}: $i * $base-spacing-unit !important;
    }
  }

  .#{$key}-reset {
    #{$property}: 0 !important;
  }

  @if $key != ma and $key != pa {
    .#{$key}-auto {
      #{$property}: auto !important;
    }
  }
}

// Flex helpers
@each $property, $values in (
  'flex-direction': (
    row
    column
    row-reverse
    column-reverse
  ),
  'justify-content': (
    flex-start
    flex-end
    center
    space-between
    space-around
  ),
  'align-items': (
    flex-start
    flex-end
    center
    baseline
    stretch
  ),
  'align-content': (
    flex-start
    flex-end
    center
    baseline
    stretch
  ),
  'flex-grow': (
    0
    1
  ),
  'flex-shrink': (
    0
    1
  )
) {
  @each $value in $values {
    .#{$property}-#{$value} {
      #{$property}: $value !important;
    }
  }
}

// Display helpers
@each $value in (
  block
  inline
  inline-block
  flex
  inline-flex
) {
  .d-#{$value} {
    display: $value !important;
  }
}

// Text helpers
.text-center {
  text-align: center !important;
}

// Screen reader helpers
.sr-only {
  border: 0 !important;
  clip: rect(1px, 1px, 1px, 1px) !important;
  clip-path: inset(50%) !important;
  height: 1px !important;
  margin: -1px !important;
  overflow: hidden !important;
  padding: 0 !important;
  position: absolute !important;
  width: 1px !important;
  white-space: nowrap !important;
}

.sr-only-focusable:focus,
.sr-only-focusable:active {
  clip: auto !important;
  clip-path: none !important;
  height: auto !important;
  margin: auto !important;
  overflow: visible !important;
  width: auto !important;
  white-space: normal !important;
}
